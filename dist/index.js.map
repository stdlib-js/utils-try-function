{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isError = require( '@stdlib/assert-is-error' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Wraps a function in a try/catch block.\n*\n* @param {Function} fcn - function to wrap\n* @param {*} [thisArg] - function context\n* @throws {TypeError} must provide a function\n* @returns {Function} wrapped function\n*\n* @example\n* function fcn() {\n*     throw new Error( 'beep boop' );\n* }\n*\n* var f = wrap( fcn );\n*\n* var out = f();\n* if ( out instanceof Error ) {\n*     console.error( out.message );\n*     // => 'beep boop'\n* }\n*/\nfunction wrap( fcn, thisArg ) {\n\tvar ctx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tctx = thisArg;\n\t} else {\n\t\tctx = null;\n\t}\n\treturn wrapped;\n\n\t/**\n\t* Wrapped function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*|Error} returned value or an error object\n\t*/\n\tfunction wrapped() {\n\t\tvar args;\n\t\tvar len;\n\t\tvar i;\n\n\t\tlen = arguments.length;\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\ttry {\n\t\t\treturn fcn.apply( ctx, args );\n\t\t} catch ( error ) {\n\t\t\tif ( isError( error ) ) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t\t// Handle thrown literals...\n\t\t\tif ( typeof error === 'object' ) {\n\t\t\t\treturn new Error( JSON.stringify( error ) );\n\t\t\t}\n\t\t\treturn new Error( error.toString() );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Wrap a function in a try/catch block.\n*\n* @module @stdlib/utils-try-function\n*\n* @example\n* var wrap = require( '@stdlib/utils-try-function' );\n*\n* function fcn() {\n*     throw new Error( 'beep boop' );\n* }\n*\n* var f = wrap( fcn );\n*\n* var out = f();\n* if ( out instanceof Error ) {\n*     console.error( out.message );\n*     // => 'beep boop'\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,4BAA6B,EACnDC,EAAU,QAAS,yBAA0B,EAC7CC,EAAS,QAAS,uBAAwB,EA0B9C,SAASC,EAAMC,EAAKC,EAAU,CAC7B,IAAIC,EACJ,GAAK,CAACN,EAAYI,CAAI,EACrB,MAAM,IAAI,UAAWF,EAAQ,0DAA2DE,CAAI,CAAE,EAE/F,OAAK,UAAU,OAAS,EACvBE,EAAMD,EAENC,EAAM,KAEAC,EASP,SAASA,GAAU,CAClB,IAAIC,EACAC,EACAC,EAIJ,IAFAD,EAAM,UAAU,OAChBD,EAAO,IAAI,MAAOC,CAAI,EAChBC,EAAI,EAAGA,EAAID,EAAKC,IACrBF,EAAME,CAAE,EAAI,UAAWA,CAAE,EAE1B,GAAI,CACH,OAAON,EAAI,MAAOE,EAAKE,CAAK,CAC7B,OAAUG,EAAQ,CACjB,OAAKV,EAASU,CAAM,EACZA,EAGH,OAAOA,GAAU,SACd,IAAI,MAAO,KAAK,UAAWA,CAAM,CAAE,EAEpC,IAAI,MAAOA,EAAM,SAAS,CAAE,CACpC,CACD,CACD,CAKAZ,EAAO,QAAUI,ICtDjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isFunction", "isError", "format", "wrap", "fcn", "thisArg", "ctx", "wrapped", "args", "len", "i", "error", "main"]
}
