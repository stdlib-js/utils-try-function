{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function' ;\nimport isError from '@stdlib/assert-is-error' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Wraps a function in a try/catch block.\n*\n* @param {Function} fcn - function to wrap\n* @param {*} [thisArg] - function context\n* @throws {TypeError} must provide a function\n* @returns {Function} wrapped function\n*\n* @example\n* function fcn() {\n*     throw new Error( 'beep boop' );\n* }\n*\n* var f = wrap( fcn );\n*\n* var out = f();\n* if ( out instanceof Error ) {\n*     console.error( out.message );\n*     // => 'beep boop'\n* }\n*/\nfunction wrap( fcn, thisArg ) {\n\tvar ctx;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( '0lm3V', fcn ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tctx = thisArg;\n\t} else {\n\t\tctx = null;\n\t}\n\treturn wrapped;\n\n\t/**\n\t* Wrapped function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*|Error} returned value or an error object\n\t*/\n\tfunction wrapped() {\n\t\tvar args;\n\t\tvar len;\n\t\tvar i;\n\n\t\tlen = arguments.length;\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\ttry {\n\t\t\treturn fcn.apply( ctx, args );\n\t\t} catch ( error ) {\n\t\t\tif ( isError( error ) ) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t\t// Handle thrown literals...\n\t\t\tif ( typeof error === 'object' ) {\n\t\t\t\treturn new Error( JSON.stringify( error ) );\n\t\t\t}\n\t\t\treturn new Error( error.toString() );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n"],"names":["wrap","fcn","thisArg","ctx","isFunction","TypeError","format","arguments","length","wrapped","args","len","i","Array","apply","error","isError","Error","JSON","stringify","toString"],"mappings":";;0QAkDA,SAASA,EAAMC,EAAKC,GACnB,IAAIC,EACJ,IAAMC,EAAYH,GACjB,MAAM,IAAII,UAAWC,EAAQ,QAASL,IAOvC,OAJCE,EADII,UAAUC,OAAS,EACjBN,EAEA,KAEAO,EASP,SAASA,IACR,IAAIC,EACAC,EACAC,EAIJ,IAFAD,EAAMJ,UAAUC,OAChBE,EAAO,IAAIG,MAAOF,GACZC,EAAI,EAAGA,EAAID,EAAKC,IACrBF,EAAME,GAAML,UAAWK,GAExB,IACC,OAAOX,EAAIa,MAAOX,EAAKO,EAUvB,CATC,MAAQK,GACT,OAAKC,EAASD,GACNA,EAGc,iBAAVA,EACJ,IAAIE,MAAOC,KAAKC,UAAWJ,IAE5B,IAAIE,MAAOF,EAAMK,WACxB,CACD,CACF"}